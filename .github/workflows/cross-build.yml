name: Cross-platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Install mingw-w64 for Windows cross-compilation
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact (Linux/macOS)
        if: startsWith(matrix.target, 'x86_64-unknown-linux-gnu') || startsWith(matrix.target, 'x86_64-apple-darwin') || startsWith(matrix.target, 'aarch64-apple-darwin')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-main
          path: target/${{ matrix.target }}/release/main

      - name: Upload artifact (Windows)
        if: endsWith(matrix.target, 'windows-gnu') || endsWith(matrix.target, 'windows-msvc')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-main.exe
          path: target/${{ matrix.target }}/release/main.exe
